import os
from pathlib import Path

import torch

from src.utils.tasks import Task

DATA_DIR_PATH = "data"

ABSA_TEST = "test.xml"
ABSA_DEV = "dev.xml"
ABSA_TRAIN = "train.xml"

SENTIMENT2OPINION = {"negative": "bad", "positive": "great", "neutral": "ok"}

SENTIMENT2LABEL = {"negative": 0, "positive": 1, "neutral": 2}

MODE_DEV = "dev"
MODE_TEST = "test"
MODE_OPTIONS = [MODE_DEV, MODE_TEST]

COL_NAMES = ["text", "label", "label_text"]

LOSS_IGNORE_INDEX = torch.nn.CrossEntropyLoss().ignore_index

CATEGORY_TO_LABEL_MAPPING = {
    "FOOD#GENERAL": 0,
    "FOOD#QUALITY": 1,
    "FOOD#STYLE_OPTIONS": 2,
    "FOOD#PRICES": 3,
    "DRINKS#PRICES": 4,
    "DRINKS#QUALITY": 5,
    "DRINKS#STYLE_OPTIONS": 6,
    "RESTAURANT#GENERAL": 7,
    "RESTAURANT#MISCELLANEOUS": 8,
    "RESTAURANT#PRICES": 9,
    "SERVICE#GENERAL": 10,
    "AMBIENCE#GENERAL": 11,
    "LOCATION#GENERAL": 12,
    "RESTAURANT#STYLE_OPTIONS": 13,
}

CATEGORY_TO_NATURAL_PHRASE_MAPPING = {
    category: category.replace("#", " ").lower() for category in CATEGORY_TO_LABEL_MAPPING
}

SENTIMENT_ELEMENT_PARTS = {
    "AT": "[A]",
    "AC": "[C]",
    "SP": "[P]",
}

# Special tokens are tokens that follow the left bracket, bracket needs to be removed
SPECIAL_TOKENS_CONSTRAINED_DECODING = ["[A", "[C", "[P", "[;"]

# List of tokens that are used in constrained decoding and have prefix, so they are not the beginning of the word, bracket needs to be removed
OTHER_TOKENS_CONSTRAINED_DECODING_WITH_PREFIX = ["[A", "[C", "[P", "[A]", "[;"]
# List of tokens that are used in constrained decoding and do not have prefix, so they are the beginning of the word
OTHER_TOKENS_CONSTRAINED_DECODING_WITHOUT_PREFIX = ["[", "it", "|", " "]

MULTI_TASK_TASKS = [Task.ACD, Task.ACSA, Task.ACTE, Task.ATE, Task.E2E, Task.TASD]

LANG_ENGLISH = "en"
LANG_SPANISH = "es"
LANG_RUSSIAN = "ru"
LANG_DUTCH = "nl"
LANG_CZECH = "cs"
LANG_TURKISH = "tr"
LANG_FRENCH = "fr"
TRAIN_LANG_OPTIONS = [LANG_ENGLISH, LANG_SPANISH, LANG_RUSSIAN, LANG_DUTCH, LANG_CZECH, LANG_TURKISH, LANG_FRENCH]
TEST_LANG_OPTIONS = [LANG_ENGLISH, LANG_SPANISH, LANG_RUSSIAN, LANG_DUTCH, LANG_CZECH, LANG_TURKISH, LANG_FRENCH]
ADAFACTOR_OPTIMIZER = "adafactor"  # AdaFactor optimizer
ADAMW_OPTIMIZER = "AdamW"  # AdamW optimizer

NULL_ASPECT_TERM = "NULL"  # Aspect term for null aspect
NULL_ASPECT_TERM_CONVERTED = "it"  # Aspect term converted from null aspect
NULL_ASPECT_TERM_CONVERTED_CZECH = "to"  # Aspect term converted from null aspect in Czech
SEPARATOR_SENTENCES = "[;]"  # Separator sentences generated by the sequence-to-sequence models
TEXT_LABEL_SEPARATOR = "|"  # Separator between text and label in the input and / or output

# Prompting params
BASE_PATH = os.path.abspath("./")
RESULTS_DIR = os.path.join(BASE_PATH, "results")

Path(RESULTS_DIR).mkdir(parents=True, exist_ok=True)

DEFAULT_CREDENTIALS_FILE_PATH_CHATGPT = os.path.join(BASE_PATH, "private", "credentials_chatgpt.txt")
